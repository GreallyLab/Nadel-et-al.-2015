##Figure 5b: Gene body and lncRNA metaplots:
###Making a metaplot for intersection of RDIP peaks and gene bodies divided into those RDIP peaks on the same strand as the lncRNA
###and those peaks on the opposite strand of the lncRNA


#The following analysis was performed in R v. 2.15.0
#Creating a gene body file with no gene repeats:
IMR90<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqData", stringsAsFactor=F)
RefSeq<-read.table("~/RDIP1/hektracks/RefSeq.bed", stringsAsFactors=F)
IMR90<-merge(IMR90, RefSeq, by.x=6, by.y=4)
> nrow(IMR90)
[1] 33288
IMR90<-cbind(IMR90[,2:4], IMR90[,1], IMR90[,6], IMR90[,5], IMR90[,10])
IMR90<-cbind(paste(as.character(IMR90[,1]), as.character(IMR90[,2]), sep=""), IMR90)
IMR90<-IMR90[which(!duplicated(IMR90[,1])),]
> nrow(IMR90)
[1] 18290
IMR90<-cbind(IMR90[,2:8])
> summary(IMR90[,6])
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
     0.00      5.42    206.10    944.50    810.00 238900.00 
write.table(IMR90, "~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)
#V1 - gene chr
#V2 - gene start
#V3 - gene stop
#V4 - RefSeq ID
#V5 - Ensembl ID
#V6 - Gene expression value
#V7 - strand of gene

#The following analysis was performed in R v. 2.15.0
#Dividing gene bodies into those on the positive and negative strand and making 100bp windows with 
#15kb upstream from the gene start (TSS) and 5kb into the gene, and then 5kb upstream of the gene stop (TES) and 15kb downstream

#For creating the 100bp windows surrounding the TSS (-15kb upstream, and 5kb downstream) for gene body on the positive strand
#Positive TSS IMR90
options(scipen=10000)
RefSeq<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", stringsAsFactors=F)
RefSeq<-subset(RefSeq, RefSeq[,7]=="+")
#Creating 200 windows, starting 15000bp upstream
bed_search<-function(bed, feature_split=200, flank=15000){
final<-apply(bed,1,function(element){
#to show me the progress of what chromosome the script is running through
print(element[1])
#making the TSS the lncRNA start site (which is column 2)
start<-as.numeric(element[2])
#now actually starting 15000bp upstream from the TSS
start<-start-15000
#The output will be a matrix of 9 columns
output<-mat.or.vec(0,9)
#Window size is 100bp (offsetting by 99bp from the start nucleotide)
offset<-99
#Start with window zero
window<-0
startholder<-start
while(window<feature_split){
output<-rbind(output, as.vector(c(element[1],startholder, startholder+offset,window,element[4],element[5],element[6],element[7],element[8])))
startholder<-startholder+offset+1
window<-window+1
}
colnames(output)<-NULL
return(as.data.frame(output))
})
return(final)
}
test<-bed_search(RefSeq)
lapply(test, function(i){write.table(i, file="test1", col.names=F, row.names=F, quote=F, sep="\t", append=T)})
TSS5kbflank<-read.table("test1", stringsAsFactors=F)
TSS5kbflank[,9]<-TSS5kbflank[,3]-TSS5kbflank[,2]
TSS5kbflank[,4]<-as.factor(TSS5kbflank[,4])
write.table(TSS5kbflank, file="~/RNAseqIMR90/IMR90TSSPos15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)

#Doing the same thing for the TSS of the genes on the minus strand
#Negative TSS IMR90
options(scipen=10000)
RefSeq<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", stringsAsFactors=F)
RefSeq<-subset(RefSeq, RefSeq[,7]=="-")
bed_search<-function(bed, feature_split=200, flank=5000){
final<-apply(bed,1,function(element){
print(element[1])
start<-as.numeric(element[3])
For genes on the minus strand, we actually start upstream of the TSS by 5000bp (because 
#that is into the genes 5kb, and then extend past the start by 15000bp to have 15kb downstream (actually upstream) of the gene
start<-start-5000
output<-mat.or.vec(0,9)
offset<-99
window<-0
startholder<-start
while(window<feature_split){
output<-rbind(output, as.vector(c(element[1],startholder, startholder+offset,window,element[4],element[5],element[6],element[7],element[8])))
startholder<-startholder+offset+1
window<-window+1
}
colnames(output)<-NULL
return(as.data.frame(output))
})
return(final)
}
test<-bed_search(RefSeq)
lapply(test, function(i){write.table(i, file="test3", col.names=F, row.names=F, quote=F, sep="\t", append=T)})
TSS5kbflank<-read.table("test3", stringsAsFactors=F)
TSS5kbflank[,9]<-TSS5kbflank[,3]-TSS5kbflank[,2]
TSS5kbflank[,4]<-as.factor(TSS5kbflank[,4])
#Because the gene is on the minus strand, we reverse the window numbers so that the window that started 5kb upstream of the TSS
#Is actually the last window so it corresponds with the window for 5kb downstream (into the gene) of those on the positive strand
levels(TSS5kbflank[,4])[order(as.numeric(levels(TSS5kbflank[,4])))]<-199:0
write.table(TSS5kbflank, file="~/RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F, append=T)

#For creating the 100bp windows surrounding the TES (-5kb upstream, and 15kb downstream) for gene on the positive strand
#Positive TES IMR90
options(scipen=10000)
RefSeq<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", stringsAsFactors=F)
RefSeq<-subset(RefSeq, RefSeq[,7]=="+")
bed_search<-function(bed, feature_split=200, flank=15000){
final<-apply(bed,1,function(element){
print(element[1])
start<-as.numeric(element[3])
start<-start-5000
output<-mat.or.vec(0,9)
offset<-99
window<-0
startholder<-start
while(window<feature_split){
output<-rbind(output, as.vector(c(element[1],startholder, startholder+offset,window,element[4],element[5],element[6],element[7],element[8])))
startholder<-startholder+offset+1
window<-window+1
}
colnames(output)<-NULL
return(as.data.frame(output))
})
return(final)
}
test<-bed_search(RefSeq)
lapply(test, function(i){write.table(i, file="test2", col.names=F, row.names=F, quote=F, sep="\t", append=T)})
TES5kbflank<-read.table("test2", stringsAsFactors=F)
TES5kbflank[,10]<-TES5kbflank[,3]-TES5kbflank[,2]
TES5kbflank[,4]<-as.factor(TES5kbflank[,4])
write.table(TES5kbflank, file="~/RNAseqIMR90/IMR90TESPos15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)

#Doing the same thing for the TES of the lncRNA on the minus strand
#Negative TES IMR90
options(scipen=10000)
RefSeq<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", stringsAsFactors=F)
RefSeq<-subset(RefSeq, RefSeq[,7]=="-")
bed_search<-function(bed, feature_split=200, flank=5000){
final<-apply(bed,1,function(element){
print(element[1])
start<-as.numeric(element[2])
start<-start-15000
output<-mat.or.vec(0,9)
offset<-99
window<-0
startholder<-start
while(window<feature_split){
output<-rbind(output, as.vector(c(element[1],startholder, startholder+offset,window,element[4],element[5],element[6],element[7],element[8])))
startholder<-startholder+offset+1
window<-window+1
}
colnames(output)<-NULL
return(as.data.frame(output))
})
return(final)
}
test<-bed_search(RefSeq)
lapply(test, function(i){write.table(i, file="test4", col.names=F, row.names=F, quote=F, sep="\t", append=T)})
TES5kbflank<-read.table("test4", stringsAsFactors=F)
TES5kbflank[,10]<-TES5kbflank[,3]-TES5kbflank[,2]
TES5kbflank[,4]<-as.factor(TES5kbflank[,4])
levels(TES5kbflank[,4])[order(as.numeric(levels(TES5kbflank[,4])))]<-199:0
write.table(TES5kbflank, file="~/RNAseqIMR90/IMR90TESNeg15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F, append=T)


#The following analysis was performed in R v. 2.15.0
#Making sure no windows fall outside of the actual genome (negative values)
PlusTSSFlank<-read.table("~/RNAseqIMR90/IMR90TSSPos15kbflankNoRepeats", stringsAsFactors=F)
MinusTSSFlank<-read.table("~/RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeats", stringsAsFactors=F)
PlusTESFlank<-read.table("~/RNAseqIMR90/IMR90TESPos15kbflankNoRepeats", stringsAsFactors=F)
MinusTESFlank<-read.table("~/RNAseqIMR90/IMR90TESNeg15kbflankNoRepeats", stringsAsFactors=F)
PlusTSSFlank<-subset(PlusTSSFlank,PlusTSSFlank[,2]>0 | PlusTSSFlank[,2]==0)
MinusTSSFlank<-subset(MinusTSSFlank,MinusTSSFlank[,2]>0 | MinusTSSFlank[,2]==0)
PlusTESFlank<-subset(PlusTESFlank,PlusTESFlank[,2]>0 | PlusTESFlank[,2]==0)
MinusTESFlank<-subset(MinusTESFlank,MinusTESFlank[,2]>0 | MinusTESFlank[,2]==0)
write.table(PlusTSSFlank, file="~/RNAseqIMR90/IMR90TSSPos15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)
write.table(MinusTSSFlank, file="~/RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeat", row.names=F, col.names=F, sep="\t", quote=F)
write.table(PlusTESFlank, file="~/RNAseqIMR90/IMR90TESPos15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)
write.table(MinusTESFlank, file="~/RNAseqIMR90/IMR90TESNeg15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)

#Intersecting gene bodies (and surrounding area) windows with the RDIP peak files
#bedtools refers to Bedtools v2.16.2
bedtools intersectBed -a RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeats -b SecondStrandCounts/IMR90minus10 -wo > RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeatsRDIP
bedtools intersectBed -a RNAseqIMR90/IMR90TSSPos15kbflankNoRepeats -b SecondStrandCounts/IMR90minus10 -wo > RNAseqIMR90/IMR90TSSPos15kbflankNoRepeatsRDIP
bedtools intersectBed -a RNAseqIMR90/IMR90TESPos15kbflankNoRepeats -b SecondStrandCounts/IMR90minus10 -wo > RNAseqIMR90/IMR90TESPos15kbflankNoRepeatsRDIP
bedtools intersectBed -a RNAseqIMR90/IMR90TESNeg15kbflankNoRepeats -b SecondStrandCounts/IMR90minus10 -wo > RNAseqIMR90/IMR90TESNeg15kbflankNoRepeatsRDIP


#The following analysis was performed in R v. 2.15.0
#To make metaplots with strandedness (meaning separating those peaks that fall on the same or opposite strand of the lncRNA)
IMR90NegTSS<-read.table("~/RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeatsRDIP", stringsAsFactors=F)
IMR90PosTSS<-read.table("~/RNAseqIMR90/IMR90TSSPos15kbflankNoRepeatsRDIP", stringsAsFactors=F)
IMR90PosTES<-read.table("~/RNAseqIMR90/IMR90TESPos15kbflankNoRepeatsRDIP", stringsAsFactors=F)
IMR90NegTES<-read.table("~/RNAseqIMR90/IMR90TESNeg15kbflankNoRepeatsRDIP", stringsAsFactors=F)
IMR90NegTES<-cbind(IMR90NegTES[,1:8], IMR90NegTES[,10:19])
IMR90PosTES<-cbind(IMR90PosTES[,1:8], IMR90PosTES[,10:19])
#Determining if the RDIP Peak is on the same strand or opposite strand of the lncRNA
IMR90PosTSSSameStrand<-subset(IMR90PosTSS, IMR90PosTSS[,16]>0)
IMR90PosTSSOppStrand<-subset(IMR90PosTSS, IMR90PosTSS[,16]<0)
IMR90NegTSSOppStrand<-subset(IMR90NegTSS, IMR90NegTSS[,16]>0)
IMR90NegTSSSameStrand<-subset(IMR90NegTSS, IMR90NegTSS[,16]<0)
IMR90PosTESSameStrand<-subset(IMR90PosTES, IMR90PosTES[,16]>0)
IMR90PosTESOppStrand<-subset(IMR90PosTES, IMR90PosTES[,16]<0)
IMR90NegTESOppStrand<-subset(IMR90NegTES, IMR90NegTES[,16]>0)
IMR90NegTESSameStrand<-subset(IMR90NegTES, IMR90NegTES[,16]<0)
#Combining the TSS files (and separately, TES files) of those peaks on the same strand (and separately opposite strand) of lncRNA
IMR90TSSSameStrand<-rbind(IMR90PosTSSSameStrand, IMR90NegTSSSameStrand)
IMR90TESSameStrand<-rbind(IMR90PosTESSameStrand, IMR90NegTESSameStrand)
IMR90TSSOppStrand<-rbind(IMR90PosTSSOppStrand, IMR90NegTSSOppStrand)
IMR90TESOppStrand<-rbind(IMR90PosTESOppStrand, IMR90NegTESOppStrand)
#Getting a count for the number of peaks that fall within each window
IMR90TSSSameStrand<-cbind(seq(0,199), table(IMR90TSSSameStrand[,4]))
IMR90TESSameStrand<-cbind(seq(0,199), table(IMR90TESSameStrand[,4]))
IMR90TSSOppStrand<-cbind(seq(0,199), table(IMR90TSSOppStrand[,4]))
IMR90TESOppStrand<-cbind(seq(0,199), table(IMR90TESOppStrand[,4]))
#Plotting
pdf("~/StrandedMetaplotsSpar50.pdf")
par(mfrow=c(2,1))
plot(IMR90TSSSameStrand[,1], IMR90TSSSameStrand[,2], cex=0, col="red", ylim=c(0,450))
lines(smooth.spline(IMR90TSSSameStrand[,1], IMR90TSSSameStrand[,2], spar=.5), col="red")
points(IMR90TSSOppStrand[,1], IMR90TSSOppStrand[,2], cex=0, col="blue")
lines(smooth.spline(IMR90TSSOppStrand[,1], IMR90TSSOppStrand[,2], spar=.5), col="blue")
plot(IMR90TESSameStrand[,1], IMR90TESSameStrand[,2], cex=0, col="red", ylim=c(0,450))
lines(smooth.spline(IMR90TESSameStrand[,1], IMR90TESSameStrand[,2], spar=.5), col="red")
points(IMR90TESOppStrand[,1], IMR90TESOppStrand[,2], cex=0, col="blue")
lines(smooth.spline(IMR90TESOppStrand[,1], IMR90TESOppStrand[,2], spar=.5), col="blue")
dev.off()









##Figure 5c - Skewing with and without peaks:
##To create a figure comparing the skewing of 100bp windows surrounding the TSS for genes containing peaks and those that dont 
##Contain peaks
#The following analysis was performed in R v. 2.15.0
PosTSS15kbflank<-read.table("~/ToCheckMetaplot/PosTSS15kbflankSkew", stringsAsFactors=F)
NegTSS15kbflank<-read.table("~/ToCheckMetaplot/NegTSS15kbflankSkew", stringsAsFactors=F)
#V1 - Gene flank window chr
#V2 - Window start
#V3 - Window stop
#V4 - Window number (0-199)
#V5 - Gene ID
#V6 - strand
#V7 - window skewing value
#Making the skewing value for those genes on the negative strand representative of their 
#skewing value (because the skewing values are determined by the nucleotides on the positive strand reference sequence)
NegTSS15kbflank<-cbind(NegTSS15kbflank[,1:6], 1-NegTSS15kbflank[,7])
#combining the two TSS flanking region datasets to make one dataset
colnames(NegTSS15kbflank)<-colnames(PosTSS15kbflank)
TSS15kbflank<-rbind(PosTSS15kbflank, NegTSS15kbflank)
#Determining the genes that contain peaks, and those without peaks
IMR90TSS15kbflankRDIP<-read.table("~/RNAseqIMR90/IMR90TSS15kbflankRDIP", stringsAsFactors=F) 
WithPeak<-which(TSS15kbflank[,5] %in% IMR90TSS15kbflankRDIP[,5])
TSS15kbflankWithPeak<-TSS15kbflank[WithPeak,]
TSS15kbflankWithoutPeak<-TSS15kbflank[-WithPeak,]
> nrow(TSS15kbflankWithPeak)
[1] 2691200
> nrow(TSS15kbflankWithoutPeak)
[1] 5031537
#Making mean skewing values for each window surrounding the TSS
TSS15kbflankWithPeakSplit<-split(TSS15kbflankWithPeak, TSS15kbflankWithPeak[,4])
meanTSS15kbflankWithPeakSplit<-lapply(TSS15kbflankWithPeakSplit, function(eachchr){
return(mean(eachchr[,7]))})
meanTSS15kbflankWithPeakSplit<-do.call(rbind, meanTSS15kbflankWithPeakSplit)
meanTSS15kbflankWithPeakSplit<-cbind(seq(0,199), meanTSS15kbflankWithPeakSplit)
TSS15kbflankWithoutPeakSplit<-split(TSS15kbflankWithoutPeak, TSS15kbflankWithoutPeak[,4])
meanTSS15kbflankWithoutPeakSplit<-lapply(TSS15kbflankWithoutPeakSplit, function(eachchr){
return(mean(eachchr[,7]))})
meanTSS15kbflankWithoutPeakSplit<-do.call(rbind, meanTSS15kbflankWithoutPeakSplit)
meanTSS15kbflankWithoutPeakSplit<-cbind(seq(0,199), meanTSS15kbflankWithoutPeakSplit)
#Plotting
pdf("~/PolypurineSkewingAllGenesAndSnapbackGenes.pdf")
plot(meanTSS15kbflankWithoutPeakSplit[,1], meanTSS15kbflankWithoutPeakSplit[,2], cex=0, ylim=c(.4,.6))
lines(smooth.spline(meanTSS15kbflankWithoutPeakSplit[,1], meanTSS15kbflankWithoutPeakSplit[,2], spar=.5), col="red", lwd=2)
lines(smooth.spline(meanTSS15kbflankWithPeakSplit[,1], meanTSS15kbflankWithPeakSplit[,2], spar=.5), col="blue", lwd=2)
abline(h=0.5)
dev.off()










##Figure 5c: Gene expression metaplot:
#Creating a metaplot of 100bp windows surrounding the TSS of RefSeq gene bodies, with the RDIP-seq peaks divided into 
#Quartiles of skewing (and no skewing), to represent their potential relationship with gene expression:


#The following analysis was performed in R v. 2.15.0
IMR90<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqData", stringsAsFactor=F)
RefSeq<-read.table("~/RDIP1/hektracks/RefSeq.bed", stringsAsFactors=F)
IMR90<-merge(IMR90, RefSeq, by.x=6, by.y=4)
IMR90<-cbind(IMR90[,2:4], IMR90[,1], IMR90[,6], IMR90[,5], IMR90[,10])
#IMR90 is representing all genes we have RNA-seq data, RefSeq and Ensembl IDs for
#V1 - Gene chr
#V2 - Gene start
#V3 - Gene stop
#V4 - RefSeq ID
#V5 - Ensembl ID
#V6 - Expression value
#V7 - Strand of gene
#Removing duplicated genes
IMR90<-cbind(paste(as.character(IMR90[,1]), as.character(IMR90[,2]), sep=""), IMR90)
IMR90<-IMR90[which(!duplicated(IMR90[,1])),]
> nrow(IMR90)
[1] 18290
IMR90<-cbind(IMR90[,2:8])
> summary(IMR90[,6]) --of expression
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
     0.00      5.42    206.10    944.50    810.00 238900.00 
write.table(IMR90, "~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)

#Dividing gene bodies into those on the positive and negative strand and making 100bp windows with 
#15kb upstream from the gene start (TSS) and 5kb into the gene, and then 5kb upstream of the gene stop (TES) and 15kb downstream

#For creating the 100bp windows surrounding the TSS (-15kb upstream, and 5kb downstream) for gene body on the positive strand
#Positive TSS IMR90
options(scipen=10000)
RefSeq<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", stringsAsFactors=F)
RefSeq<-subset(RefSeq, RefSeq[,7]=="+")
#Creating 200 windows, starting 15000bp upstream
bed_search<-function(bed, feature_split=200, flank=15000){
final<-apply(bed,1,function(element){
#to show me the progress of what chromosome the script is running through
print(element[1])
#making the TSS the lncRNA start site (which is column 2)
start<-as.numeric(element[2])
#now actually starting 15000bp upstream from the TSS
start<-start-15000
#The output will be a matrix of 9 columns
output<-mat.or.vec(0,9)
#Window size is 100bp (offsetting by 99bp from the start nucleotide)
offset<-99
#Start with window zero
window<-0
startholder<-start
while(window<feature_split){
output<-rbind(output, as.vector(c(element[1],startholder, startholder+offset,window,element[4],element[5],element[6],element[7],element[8])))
startholder<-startholder+offset+1
window<-window+1
}
colnames(output)<-NULL
return(as.data.frame(output))
})
return(final)
}
test<-bed_search(RefSeq)
lapply(test, function(i){write.table(i, file="test1", col.names=F, row.names=F, quote=F, sep="\t", append=T)})
TSS5kbflank<-read.table("test1", stringsAsFactors=F)
TSS5kbflank[,9]<-TSS5kbflank[,3]-TSS5kbflank[,2]
TSS5kbflank[,4]<-as.factor(TSS5kbflank[,4])
write.table(TSS5kbflank, file="~/RNAseqIMR90/IMR90TSSPos15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F)

#Doing the same thing for the TSS of the genes on the minus strand
#Negative TSS IMR90
options(scipen=10000)
RefSeq<-read.table("~/RNAseqIMR90/IMR90RNASeqRefSeqDataNoRepeats", stringsAsFactors=F)
RefSeq<-subset(RefSeq, RefSeq[,7]=="-")
bed_search<-function(bed, feature_split=200, flank=5000){
final<-apply(bed,1,function(element){
print(element[1])
start<-as.numeric(element[3])
For genes on the minus strand, we actually start upstream of the TSS by 5000bp (because 
#that is into the genes 5kb, and then extend past the start by 15000bp to have 15kb downstream (actually upstream) of the gene
start<-start-5000
output<-mat.or.vec(0,9)
offset<-99
window<-0
startholder<-start
while(window<feature_split){
output<-rbind(output, as.vector(c(element[1],startholder, startholder+offset,window,element[4],element[5],element[6],element[7],element[8])))
startholder<-startholder+offset+1
window<-window+1
}
colnames(output)<-NULL
return(as.data.frame(output))
})
return(final)
}
test<-bed_search(RefSeq)
lapply(test, function(i){write.table(i, file="test3", col.names=F, row.names=F, quote=F, sep="\t", append=T)})
TSS5kbflank<-read.table("test3", stringsAsFactors=F)
TSS5kbflank[,9]<-TSS5kbflank[,3]-TSS5kbflank[,2]
TSS5kbflank[,4]<-as.factor(TSS5kbflank[,4])
#Because the gene is on the minus strand, we reverse the window numbers so that the window that started 5kb upstream of the TSS
#Is actually the last window so it corresponds with the window for 5kb downstream (into the gene) of those on the positive strand
levels(TSS5kbflank[,4])[order(as.numeric(levels(TSS5kbflank[,4])))]<-199:0
write.table(TSS5kbflank, file="~/RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeats", row.names=F, col.names=F, sep="\t", quote=F, append=T)

#Intersecting with gene bodies
#bedtools refers to Bedtools v2.16.2
bedtools intersectBed -a RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeats -b SecondStrandCounts/IMR90minus10 -wo > RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeatsRDIP
bedtools intersectBed -a RNAseqIMR90/IMR90TSSPos15kbflankNoRepeats -b SecondStrandCounts/IMR90minus10 -wo > RNAseqIMR90/IMR90TSSPos15kbflankNoRepeatsRDIP

cat RNAseqIMR90/IMR90TSSNeg15kbflankNoRepeatsRDIP RNAseqIMR90/IMR90TSSPos15kbflankNoRepeatsRDIP > RNAseqIMR90/IMR90TSS15kbflankNoRepeatsRDIP


#The following analysis was performed in R v. 2.15.0
IMR90TSS<-read.table("~/RNAseqIMR90/IMR90TSS15kbflankNoRepeatsRDIP", stringsAsFactors=F)
#Removing any duplicated windows for the same gene 
IMR90TSS<-cbind(paste(as.character(IMR90TSS[,13]), as.character(IMR90TSS[,4]), sep=""), IMR90TSS)
IMR90TSS<-IMR90TSS[which(!duplicated(IMR90TSS[,1])),]
IMR90TSS<-cbind(IMR90TSS[,2:19])
#V1 - gene window chr
#V2 - gene window start
#V3 - gene window stop
#V4 - gene window
#V5 - REfSeq ID
#V6 - Ensembl ID
#V7 - expression value
#V8 - strand
#V9 - window length
#V10 - peak chr
#V11 - peak start
#V12 - peak stop
#V13 - peak name
#V16 - peak strandedness value
#V17 - peak skewing value
#V18 - nucleotide overlap between gene and peak
#Subsetting the dataset to be just genes that have no expression
IMR90TSS0<-subset(IMR90TSS, IMR90TSS[,7]==0)
zero=which(IMR90TSS[,7]==0)
IMR90TSS<-IMR90TSS[-zero,]
#Subsetting the dataset for the bottom quartile of expression
IMR9025<-subset(IMR90TSS, IMR90TSS[,7]<16.90)
twentyfive=which(IMR90TSS[,7]<16.90)
IMR90TSS<-IMR90TSS[-twentyfive,]
#Subsetting the dataset for the 2nd quartile of expression
IMR9050<-subset(IMR90TSS, IMR90TSS[,7]<269.50)
fifty=which(IMR90TSS[,7]<269.50)
IMR90TSS<-IMR90TSS[-fifty,]
#Subsetting the data for the 3rd quartile of expression
IMR9075<-subset(IMR90TSS, IMR90TSS[,7]<898.90)
seventyfive=which(IMR90TSS[,7]<898.90)
IMR90TSS<-IMR90TSS[-seventyfive,]
#Subsetting the remaining data for the top quartile of expression
IMR90100<-IMR90TSS
#Plotting RDIP-seq peaks Per gene/window
IMR90TSS0<-cbind(seq(0,199), table(IMR90TSS0[,4]))
IMR9025<-cbind(seq(0,199), table(IMR9025[,4]))
IMR9050<-cbind(seq(0,199), table(IMR9050[,4]))
IMR9075<-cbind(seq(0,199), table(IMR9075[,4]))
IMR90100<-cbind(seq(0,199), table(IMR90100[,4]))
#Divided by the number of genes in that quartile of expression
IMR90TSS0<-cbind(IMR90TSS0[,1], IMR90TSS0[,2]/1477)
IMR9025<-cbind(IMR9025[,1], IMR9025[,2]/4204)
IMR9050<-cbind(IMR9050[,1], IMR9050[,2]/4203)
IMR9075<-cbind(IMR9075[,1], IMR9075[,2]/4203)
IMR90100<-cbind(IMR90100[,1], IMR90100[,2]/4203)
pdf("~/RNAseqmetaplotzoominPerGenePerWindow.pdf")
plot(IMR90TSS0[,1], IMR90TSS0[,2], cex=.2, col="red", ylim=c(0,.05), xlim=c(140,180))
points(IMR9025[,1], IMR9025[,2], cex=.2, col="orange")
points(IMR9050[,1], IMR9050[,2], cex=.2, col="gold")
points(IMR9075[,1], IMR9075[,2], cex=.2, col="green")
points(IMR90100[,1], IMR90100[,2], cex=.2, col="blue")
lines(smooth.spline(IMR90TSS0[,1], IMR90TSS0[,2], spar=.25), col="red", lwd=2)
lines(smooth.spline(IMR9025[,1], IMR9025[,2], spar=.25), col="orange", lwd=2)
lines(smooth.spline(IMR9050[,1], IMR9050[,2], spar=.25), col="gold", lwd=2)
lines(smooth.spline(IMR9075[,1], IMR9075[,2], spar=.25), col="green", lwd=2)
lines(smooth.spline(IMR90100[,1], IMR90100[,2], spar=.25), col="blue", lwd=2)
abline(v=150)
abline(v=165)
dev.off()
#Zoomed in plot on the TSS +1.5kb 
pdf("~/RNAseqmetaplotzoomin.pdf")
plot(IMR90TSS0[,1], IMR90TSS0[,2], cex=.2, col="red", ylim=c(0,250), xlim=c(140,180))
points(IMR9025[,1], IMR9025[,2], cex=.2, col="orange")
points(IMR9050[,1], IMR9050[,2], cex=.2, col="gold")
points(IMR9075[,1], IMR9075[,2], cex=.2, col="green")
points(IMR90100[,1], IMR90100[,2], cex=.2, col="blue")
lines(smooth.spline(IMR90TSS0[,1], IMR90TSS0[,2], spar=.25), col="red", lwd=2)
lines(smooth.spline(IMR9025[,1], IMR9025[,2], spar=.25), col="orange", lwd=2)
lines(smooth.spline(IMR9050[,1], IMR9050[,2], spar=.25), col="gold", lwd=2)
lines(smooth.spline(IMR9075[,1], IMR9075[,2], spar=.25), col="green", lwd=2)
lines(smooth.spline(IMR90100[,1], IMR90100[,2], spar=.25), col="blue", lwd=2)
abline(v=150)
abline(v=165)
dev.off()


